#Область ПрограммныйИнтерфейс

// Создает объект ОписаниеТипов, содержащий тип Дата.
//
// Параметры:
//  СоставДаты - ЧастиДаты - состав даты (время/дата/дата и время).
//
// Возвращаемое значение:
//  ОписаниеТипов. Описание типа Дата.
//
Функция ОписаниеТипаДата(Знач СоставДаты = Неопределено) Экспорт
	
	Если СоставДаты = Неопределено Тогда
		СоставДаты = ЧастиДаты.ДатаВремя;
	КонецЕсли;
	
	Возврат Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(СоставДаты));
	
КонецФункции

// Создает объект ОписаниеТипов, содержащий тип Строка.
//
// Параметры:
//  ДлинаСтроки - Число - длина строки.
//
// Возвращаемое значение:
//  ОписаниеТипов. Описание типа Строка.
//
Функция ОписаниеТипаСтрока(Знач ДлинаСтроки) Экспорт
	
	КвалификаторСтроки = Новый КвалификаторыСтроки(ДлинаСтроки, ДопустимаяДлина.Переменная);
	
	Возврат Новый ОписаниеТипов("Строка", , КвалификаторСтроки);
	
КонецФункции

// Создает объект ОписаниеТипов, содержащий тип Число.
//
// Параметры:
//  Разрядность             - Число - общее количество разрядов числа (количество 
//                            разрядов целой части + количество разрядов дробной 
//                            части).
//  РазрядностьДробнойЧасти - Число - количество разрядов дробной части.
//  ДопустимыйЗнак          - ДопустимыйЗнак - допустимый знак числа.
//
// Возвращаемое значение:
//  ОписаниеТипов. Описание типа Число.
//
Функция ОписаниеТипаЧисло(Знач Разрядность, Знач РазрядностьДробнойЧасти = 0, Знач ДопустимыйЗнак = Неопределено) Экспорт
	
	Если ДопустимыйЗнак = Неопределено Тогда
		КвалификаторЧисла = Новый КвалификаторыЧисла(Разрядность, РазрядностьДробнойЧасти);
	Иначе
		КвалификаторЧисла = Новый КвалификаторыЧисла(Разрядность, РазрядностьДробнойЧасти, ДопустимыйЗнак);
	КонецЕсли;
	
	Возврат Новый ОписаниеТипов("Число", КвалификаторЧисла);
	
КонецФункции

#КонецОбласти